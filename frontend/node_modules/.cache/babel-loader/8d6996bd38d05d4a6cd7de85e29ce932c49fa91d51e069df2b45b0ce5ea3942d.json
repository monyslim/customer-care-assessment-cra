{"ast":null,"code":"var _jsxFileName = \"/home/monyslim/customer-care-assessment-cra-frontend/frontend/src/pages/AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [submissions, setSubmissions] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [usersRes, submissionsRes] = await Promise.all([axios.get('http://localhost:5000/api/users'), axios.get('http://localhost:5000/api/submissions')]);\n        setUsers(usersRes.data);\n        setSubmissions(submissionsRes.data);\n        setLoading(false);\n      } catch (err) {\n        alert('Failed to load admin data');\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading admin data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 900,\n      margin: '30px auto',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Test Takers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          cursor: 'pointer',\n          marginBottom: 5,\n          fontWeight: selectedUser === user ? 'bold' : 'normal'\n        },\n        onClick: () => setSelectedUser(user),\n        children: user\n      }, user, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Submission for: \", selectedUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), submissions.filter(s => s.user === selectedUser).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No submissions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this) : submissions.filter(s => s.user === selectedUser).map((sub, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 10,\n          border: '1px solid #ccc',\n          marginBottom: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Submitted At:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 22\n          }, this), \" \", new Date(sub.timestamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Answers:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(sub.answers).map(([qid, ans]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Question \", qid, \": \", ans]\n            }, qid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedUser(null),\n        children: \"Back to users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"Zx7HJ0ykb4qghQY+zXkY52dq7oQ=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","users","setUsers","submissions","setSubmissions","selectedUser","setSelectedUser","loading","setLoading","fetchData","usersRes","submissionsRes","Promise","all","get","data","err","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","fontFamily","length","map","user","cursor","marginBottom","fontWeight","onClick","filter","s","sub","idx","padding","border","Date","timestamp","toLocaleString","Object","entries","answers","qid","ans","_c","$RefreshReg$"],"sources":["/home/monyslim/customer-care-assessment-cra-frontend/frontend/src/pages/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function AdminDashboard() {\n  const [users, setUsers] = useState([]);\n  const [submissions, setSubmissions] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const [usersRes, submissionsRes] = await Promise.all([\n          axios.get('http://localhost:5000/api/users'),\n          axios.get('http://localhost:5000/api/submissions')\n        ]);\n        setUsers(usersRes.data);\n        setSubmissions(submissionsRes.data);\n        setLoading(false);\n      } catch (err) {\n        alert('Failed to load admin data');\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n\n  if (loading) return <p>Loading admin data...</p>;\n\n  return (\n    <div style={{ maxWidth: 900, margin: '30px auto', fontFamily: 'Arial' }}>\n      <h2>Admin Dashboard</h2>\n\n      <h3>Test Takers</h3>\n      {users.length === 0 ? <p>No users found.</p> : (\n        <ul>\n          {users.map(user => (\n            <li key={user} style={{ cursor: 'pointer', marginBottom: 5, fontWeight: selectedUser === user ? 'bold' : 'normal' }}\n                onClick={() => setSelectedUser(user)}>\n              {user}\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {selectedUser && (\n        <>\n          <h3>Submission for: {selectedUser}</h3>\n          {submissions.filter(s => s.user === selectedUser).length === 0 ? (\n            <p>No submissions found.</p>\n          ) : (\n            submissions.filter(s => s.user === selectedUser).map((sub, idx) => (\n              <div key={idx} style={{ padding: 10, border: '1px solid #ccc', marginBottom: 15 }}>\n                <div><strong>Submitted At:</strong> {new Date(sub.timestamp).toLocaleString()}</div>\n                <div>\n                  <strong>Answers:</strong>\n                  <ul>\n                    {Object.entries(sub.answers).map(([qid, ans]) => (\n                      <li key={qid}>Question {qid}: {ans}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            ))\n          )}\n          <button onClick={() => setSelectedUser(null)}>Back to users</button>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,eAAegB,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAM,CAACC,QAAQ,EAAEC,cAAc,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnDnB,KAAK,CAACoB,GAAG,CAAC,iCAAiC,CAAC,EAC5CpB,KAAK,CAACoB,GAAG,CAAC,uCAAuC,CAAC,CACnD,CAAC;QACFZ,QAAQ,CAACQ,QAAQ,CAACK,IAAI,CAAC;QACvBX,cAAc,CAACO,cAAc,CAACI,IAAI,CAAC;QACnCP,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACZC,KAAK,CAAC,2BAA2B,CAAC;QAClCT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IACAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOX,OAAA;IAAAsB,QAAA,EAAG;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEhD,oBACE1B,OAAA;IAAK2B,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,WAAW;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAR,QAAA,gBACtEtB,OAAA;MAAAsB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExB1B,OAAA;MAAAsB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBrB,KAAK,CAAC0B,MAAM,KAAK,CAAC,gBAAG/B,OAAA;MAAAsB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAC1C1B,OAAA;MAAAsB,QAAA,EACGjB,KAAK,CAAC2B,GAAG,CAACC,IAAI,iBACbjC,OAAA;QAAe2B,KAAK,EAAE;UAAEO,MAAM,EAAE,SAAS;UAAEC,YAAY,EAAE,CAAC;UAAEC,UAAU,EAAE3B,YAAY,KAAKwB,IAAI,GAAG,MAAM,GAAG;QAAS,CAAE;QAChHI,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAACuB,IAAI,CAAE;QAAAX,QAAA,EACtCW;MAAI,GAFEA,IAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGT,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,EAEAjB,YAAY,iBACXT,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,GAAI,kBAAgB,EAACb,YAAY;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACtCnB,WAAW,CAAC+B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACN,IAAI,KAAKxB,YAAY,CAAC,CAACsB,MAAM,KAAK,CAAC,gBAC5D/B,OAAA;QAAAsB,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE5BnB,WAAW,CAAC+B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACN,IAAI,KAAKxB,YAAY,CAAC,CAACuB,GAAG,CAAC,CAACQ,GAAG,EAAEC,GAAG,kBAC5DzC,OAAA;QAAe2B,KAAK,EAAE;UAAEe,OAAO,EAAE,EAAE;UAAEC,MAAM,EAAE,gBAAgB;UAAER,YAAY,EAAE;QAAG,CAAE;QAAAb,QAAA,gBAChFtB,OAAA;UAAAsB,QAAA,gBAAKtB,OAAA;YAAAsB,QAAA,EAAQ;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,IAAIkB,IAAI,CAACJ,GAAG,CAACK,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpF1B,OAAA;UAAAsB,QAAA,gBACEtB,OAAA;YAAAsB,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzB1B,OAAA;YAAAsB,QAAA,EACGyB,MAAM,CAACC,OAAO,CAACR,GAAG,CAACS,OAAO,CAAC,CAACjB,GAAG,CAAC,CAAC,CAACkB,GAAG,EAAEC,GAAG,CAAC,kBAC1CnD,OAAA;cAAAsB,QAAA,GAAc,WAAS,EAAC4B,GAAG,EAAC,IAAE,EAACC,GAAG;YAAA,GAAzBD,GAAG;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GATEe,GAAG;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUR,CACN,CACF,eACD1B,OAAA;QAAQqC,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAAC,IAAI,CAAE;QAAAY,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACpE,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CAnEuBD,cAAc;AAAAiD,EAAA,GAAdjD,cAAc;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}